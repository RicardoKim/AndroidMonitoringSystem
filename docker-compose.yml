version: '2'

networks:
  app_network:
    driver: bridge

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - app_network

  spark:
    image: docker.io/bitnami/spark:3.4
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - app_network

  spark-worker-1:
    image: docker.io/bitnami/spark:3.4
    volumes:
       - ./spark:/opt/spark-script
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=20
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    command: >
      bash -c "
        pip install pymongo &&
        spark-submit --executor-cores 4 --executor-memory 1g --num-executors 1 --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.1 --master local[2] /opt/spark-script/spark_process_consumer.py &&
        spark-submit --executor-cores 4 --executor-memory 1g --num-executors 1 --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.1 --master local[2] /opt/spark-script/spark_memory_consumer.py
      "
    networks:
      - app_network

  spark-worker-2:
    image: docker.io/bitnami/spark:3.4
    volumes:
       - ./spark:/opt/spark-script
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=20
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    command: >
      bash -c "
        pip install pymongo &&
        spark-submit --executor-cores 4 --executor-memory 1g --num-executors 1 --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.1 --master local[2] /opt/spark-script/spark_error_log_consumer.py
      "
    networks:
      - app_network

  mongodb1:
    image: mongo
    container_name: mongodb1
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongo/mongodb1:/data/db
      - ./mongo/mongodb.key:/etc/mongodb.key 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=AndroidLogDataMart
    command: mongod --auth --keyFile /etc/mongodb.key --replSet rs0 --bind_ip_all
    networks:
      - app_network

  mongodb2:
    image: mongo
    container_name: mongodb2
    restart: always
    ports:
      - 27018:27017
    volumes:
      - ./mongo/mongodb2:/data/db
      - ./mongo/mongodb.key:/etc/mongodb.key
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=AndroidLogDataMart
    command: mongod --auth --keyFile /etc/mongodb.key --replSet rs0 --bind_ip_all
    networks:
      - app_network

  mongodb3:
    image: mongo
    container_name: mongodb3
    restart: always
    ports:
      - 27019:27017
    volumes:
      - ./mongo/mongodb3:/data/db
      - ./mongo/mongodb.key:/etc/mongodb.key 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=AndroidLogDataMart
    command: mongod --auth --keyFile /etc/mongodb.key --replSet rs0 --bind_ip_all
    networks:
      - app_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_URL: mongodb://root:1234@mongodb1:27017
    networks:
      - app_network

  server:
    container_name: backend-server
    build:
      context: ./app/backend
    networks:
      - app_network
    ports:
      - "8000:8000"


